{"version":3,"sources":["components/form.js","App.js","index.js"],"names":["Form","props","addBook","setIsLoading","bookToEdit","setBooks","useState","title","setTitle","author","setAuthor","sells","setSells","book","a","fetchOptions","method","headers","body","JSON","stringify","fetch","process","response","json","console","log","useEffect","className","onSubmit","e","preventDefault","type","onChange","target","value","step","parseInt","onClick","createBook","editBook","App","books","isLoading","setBookToEdit","getBooks","map","b","style","backgroundColor","deleteBook","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edfa0303.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction Form(props) {\r\n  const { addBook, setIsLoading, bookToEdit, setBooks } = props;\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [sells, setSells] = useState(0);\r\n\r\n  async function createBook(book) {\r\n    setIsLoading(true);\r\n    const fetchOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(book),\r\n    };\r\n    const response = await fetch(\r\n      process.env.REACT_APP_URL_SERVER,\r\n      fetchOptions\r\n    );\r\n    const body = await response.json();\r\n    console.log(`async createBook: received response ${JSON.stringify(body)}`);\r\n    addBook(body);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  async function editBook(book) {\r\n    bookToEdit.title = title;\r\n    bookToEdit.author = author;\r\n    bookToEdit.sells = sells;\r\n\r\n    const fetchOptions = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(book),\r\n    };\r\n\r\n    const response = await fetch(\r\n      process.env.REACT_APP_URL_SERVER,\r\n      fetchOptions\r\n    );\r\n    const body = await response.json();\r\n    setBooks(body);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (bookToEdit) {\r\n      setTitle(bookToEdit.title);\r\n      setAuthor(bookToEdit.author);\r\n      setSells(bookToEdit.sells);\r\n    }\r\n  }, [bookToEdit]);\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\r\n      Title:\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        value={title}\r\n      />\r\n      Author:\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"text\"\r\n        onChange={(e) => setAuthor(e.target.value)}\r\n        value={author}\r\n      />\r\n      Sells:\r\n      <input\r\n        className=\"form__input\"\r\n        type=\"number\"\r\n        step={1000}\r\n        value={sells}\r\n        onChange={(e) => setSells(parseInt(e.target.value))}\r\n      />\r\n      <button\r\n        className=\"form__button\"\r\n        onClick={() =>\r\n          createBook({\r\n            title: title,\r\n            author: author,\r\n            sells: sells,\r\n          })\r\n        }\r\n      >\r\n        Bevestigen\r\n      </button>\r\n      <button\r\n        className=\"form__button\"\r\n        onClick={\r\n          bookToEdit !== null\r\n            ? () => editBook(bookToEdit)\r\n            : console.log(\"Deze boek bestaat niet.\")\r\n        }\r\n      >\r\n        Bewerken\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/form\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [bookToEdit, setBookToEdit] = useState(null);\n  useEffect(() => {\n    async function getBooks() {\n      setIsLoading(true);\n      const response = await fetch(process.env.REACT_APP_URL_SERVER);\n      const body = await response.json();\n      setBooks(body);\n      setIsLoading(false);\n    }\n\n    getBooks();\n  }, []);\n\n  async function deleteBook(book) {\n    const fetchOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(book),\n    };\n\n    const response = await fetch(\n      process.env.REACT_APP_URL_SERVER,\n      fetchOptions\n    );\n    const body = await response.json();\n    setBooks(body);\n  }\n\n  return (\n    <div className=\"App\">\n      {isLoading ? <p>LOADING DATA</p> : false}\n      {books.map((b) => (\n        <p\n          className=\"book\"\n          onClick={() => setBookToEdit(b)}\n          key={b.id}\n          style={{\n            backgroundColor: `${bookToEdit === b ? \"grey\" : \"transparent\"}`,\n          }}\n        >\n          title: {b.title + \" - \"}\n          author: {b.author + \" - \"}\n          sells: {b.sells}\n          <button onClick={() => deleteBook(b)}>Delete</button>\n        </p>\n      ))}\n      <Form\n        bookToEdit={bookToEdit}\n        setIsLoading={setIsLoading}\n        addBook={(body) => setBooks([...books, body])}\n        setBooks={setBooks}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
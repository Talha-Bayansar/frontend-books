{"version":3,"sources":["components/form.js","App.js","index.js"],"names":["Form","props","addBook","setIsLoading","bookToEdit","setBooks","setMessage","fetchWithCsrf","useState","title","setTitle","author","setAuthor","priceInEuro","setPriceInEuro","book","a","fetchOptions","method","body","JSON","stringify","process","response","json","ok","console","log","status","error","message","errorMessage","errors","reduce","accumulator","defaultMessage","id","useEffect","className","onSubmit","e","preventDefault","type","onChange","target","value","pattern","min","max","parseInt","onClick","createBook","editBook","App","books","isLoading","setBookToEdit","userName","setUserName","getBooks","credentials","headers","fetch","usernameForm","passwordForm","authorization","window","btoa","username","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","url","options","authenticate","map","b","style","backgroundColor","deleteBook","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8bfff7d1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\n\nfunction Form(props) {\n  const {\n    addBook,\n    setIsLoading,\n    bookToEdit,\n    setBooks,\n    setMessage,\n    fetchWithCsrf,\n  } = props;\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [priceInEuro, setPriceInEuro] = useState(0);\n\n  async function createBook(book) {\n    setIsLoading(true);\n    const fetchOptions = {\n      method: \"POST\",\n      body: JSON.stringify(book),\n    };\n    try {\n      const response = await fetchWithCsrf(\n        `${process.env.REACT_APP_URL_SERVER}/books`,\n        fetchOptions\n      );\n      const body = await response.json();\n      if (response.ok) {\n        console.log(\n          `async createBook: received response ${JSON.stringify(body)}`\n        );\n        addBook(body);\n        setMessage(\"Book added successfully.\");\n        console.log(\"createBook: done\");\n      } else {\n        console.log(\n          `async createBook: ERROR: ${response.status} - ${body.error} - ${body.message}`\n        );\n        const errorMessage =\n          body.errors &&\n          body.errors.reduce(\n            (accumulator, error) =>\n              `${accumulator} ${error.defaultMessage} ---`,\n            \"--- \"\n          );\n        setMessage(errorMessage || body.message);\n      }\n    } catch (e) {\n      console.log(e);\n      setMessage(\"Connection error.\");\n    }\n\n    setIsLoading(false);\n  }\n\n  async function editBook(book) {\n    // book.title = title;\n    // book.author = author;\n    // book.priceInEuro = priceInEuro;\n\n    const fetchOptions = {\n      method: \"PUT\",\n      body: JSON.stringify({\n        id: book.id,\n        title: title,\n        author: author,\n        priceInEuro: priceInEuro,\n      }),\n    };\n\n    try {\n      const response = await fetchWithCsrf(\n        `${process.env.REACT_APP_URL_SERVER}/books/${book.id}`,\n        fetchOptions\n      );\n      const body = await response.json();\n      console.log(body);\n      if (response.ok) {\n        setMessage(\"Book edited successfully.\");\n        console.log(\"createBook: done\");\n        setBooks(body);\n      } else {\n        const errorMessage =\n          body.errors &&\n          body.errors.reduce(\n            (accumulator, error) =>\n              `${accumulator} ${error.defaultMessage} ---`,\n            \"--- \"\n          );\n        setMessage(errorMessage || body.message);\n      }\n    } catch (e) {\n      console.log(e);\n      setMessage(\"Connection error.\");\n    }\n  }\n\n  useEffect(() => {\n    if (bookToEdit) {\n      setTitle(bookToEdit.title);\n      setAuthor(bookToEdit.author);\n      setPriceInEuro(bookToEdit.priceInEuro);\n    }\n  }, [bookToEdit]);\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n      }}\n    >\n      Title:\n      <input\n        className=\"form__input\"\n        type=\"text\"\n        onChange={(e) => setTitle(e.target.value)}\n        value={title}\n        pattern=\"(.|\\s)*\\S(.|\\s)*\"\n      />\n      Author:\n      <input\n        className=\"form__input\"\n        type=\"text\"\n        onChange={(e) => setAuthor(e.target.value)}\n        value={author}\n        pattern=\"(.|\\s)*\\S(.|\\s)*\"\n      />\n      Price:\n      <input\n        className=\"form__input\"\n        type=\"number\"\n        min={0}\n        max={2000}\n        value={priceInEuro}\n        onChange={(e) => setPriceInEuro(parseInt(e.target.value))}\n      />\n      <button\n        className=\"form__button\"\n        onClick={() =>\n          createBook({\n            title: title,\n            author: author,\n            priceInEuro: priceInEuro,\n          })\n        }\n      >\n        Bevestigen\n      </button>\n      <button\n        className=\"form__button\"\n        onClick={\n          bookToEdit !== null\n            ? () => editBook(bookToEdit)\n            : console.log(\"Deze boek bestaat niet.\")\n        }\n      >\n        Bewerken\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/form\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [bookToEdit, setBookToEdit] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [userName, setUserName] = useState(null);\n\n  async function getBooks() {\n    setIsLoading(true);\n    try {\n      const fetchOptions = {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n      };\n      const response = await fetch(\n        `${process.env.REACT_APP_URL_SERVER}/books`,\n        fetchOptions\n      );\n      const body = await response.json();\n      setBooks(body);\n    } catch (e) {\n      console.log(e);\n      setMessage(\"Connection error.\");\n    }\n    setIsLoading(false);\n  }\n\n  async function authenticate(usernameForm, passwordForm) {\n    const fetchOptions = {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        authorization: \"Basic \" + window.btoa(\"talha:talha\"),\n      },\n    };\n    const response = await fetch(\n      `${process.env.REACT_APP_URL_SERVER}/authenticate`,\n      fetchOptions\n    );\n\n    const body = await response.json();\n    setUserName(body.username);\n  }\n\n  function getCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  async function fetchWithCsrf(url, options) {\n    const fetchOptions = {\n      method: options.method,\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        \"X-XSRF-TOKEN\": `${getCookie(\"XSRF-TOKEN\")}`,\n      },\n      body: options.body,\n    };\n    return await fetch(url, fetchOptions);\n  }\n\n  useEffect(() => {\n    authenticate();\n  }, []);\n\n  useEffect(() => {\n    getBooks();\n  }, [userName]);\n\n  async function deleteBook(book) {\n    const fetchOptions = {\n      method: \"DELETE\",\n    };\n\n    try {\n      const response = await fetchWithCsrf(\n        `${process.env.REACT_APP_URL_SERVER}/books/${book.id}`,\n        fetchOptions\n      );\n      const body = await response.json();\n      if (response.ok) {\n        setMessage(\"Book deleted successfully.\");\n        setBooks(body);\n      } else {\n        setMessage(`${body.message}`);\n      }\n    } catch (e) {\n      console.log(e);\n      setMessage(\"Connection error.\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => getBooks()}>Refresh</button>\n      {isLoading ? <p>LOADING DATA</p> : false}\n      {userName && <span>logged in as {userName}</span>}\n      <span>{message}</span>\n      {books.map((b) => (\n        <p\n          className=\"book\"\n          onClick={() => setBookToEdit(b)}\n          key={b.id}\n          style={{\n            backgroundColor: `${bookToEdit === b ? \"grey\" : \"transparent\"}`,\n          }}\n        >\n          title: {b.title + \" - \"}\n          author: {b.author + \" - \"}\n          price: {b.priceInEuro}\n          <button onClick={() => deleteBook(b)}>Delete</button>\n        </p>\n      ))}\n      <Form\n        bookToEdit={bookToEdit}\n        setIsLoading={setIsLoading}\n        addBook={(body) => setBooks([...books, body])}\n        setBooks={setBooks}\n        setMessage={setMessage}\n        fetchWithCsrf={fetchWithCsrf}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}